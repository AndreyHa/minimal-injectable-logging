class o{verbose(...o){console.log(...o)}info(...o){console.log(...o)}success(...o){console.log(...o)}warn(...o){console.warn(...o)}error(...o){console.error(...o)}}let s=new o;var e;!function(o){o.verbose=function(...o){s.verbose(...o)},o.info=function(...o){s.info(...o)},o.success=function(...o){s.success(...o)},o.warn=function(...o){s.warn(...o)},o.error=function(...o){s.error(...o)},o.setLogger=function(o){s=o}}(e||(e={}));class n{verbose(...o){}info(...o){this.log("INFO","[34m",...o)}success(...o){this.log("OK","[32m",...o)}warn(...o){this.log("WARN","[33m",...o)}error(...o){this.log("ERROR","[31m",...o)}log(o,s,...e){const n=new Date,r=`${n.getHours()}:${n.getMinutes()}:${n.getSeconds()}`.padEnd(8);process.stdout.write(`${s}${o.padEnd(5)}[0m ${r} `),console.log(...e)}}export{o as ConsoleLogger,e as Logger,n as MinimalLogger};
